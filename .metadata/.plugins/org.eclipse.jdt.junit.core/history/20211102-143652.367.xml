<?xml version="1.0" encoding="UTF-8"?><testrun name="CuandoIniciamosSesion (1)" project="Takami" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="SprintUno.CuandoIniciamosSesion" time="0.001" displayname="CuandoIniciamosSesion" uniqueid="[engine:junit-vintage]/[runner:SprintUno.CuandoIniciamosSesion]">
    <testcase name="SprintUno.CuandoIniciamosSesion" classname="SprintUno.CuandoIniciamosSesion" time="0.002" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:SprintUno.CuandoIniciamosSesion]/[test:initializationError(SprintUno.CuandoIniciamosSesion)]">
      <error>com.google.common.util.concurrent.UncheckedExecutionException: java.lang.IllegalStateException: Unable to load cache item&#13;
	at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2052)&#13;
	at com.google.common.cache.LocalCache.get(LocalCache.java:3948)&#13;
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3972)&#13;
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4957)&#13;
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4963)&#13;
	at com.google.inject.internal.FailableCache.get(FailableCache.java:51)&#13;
	at com.google.inject.internal.ConstructorInjectorStore.get(ConstructorInjectorStore.java:48)&#13;
	at com.google.inject.internal.ConstructorBindingImpl.initialize(ConstructorBindingImpl.java:155)&#13;
	at com.google.inject.internal.InjectorImpl.initializeJitBinding(InjectorImpl.java:595)&#13;
	at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:932)&#13;
	at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:852)&#13;
	at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:291)&#13;
	at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:222)&#13;
	at com.google.inject.internal.InjectorImpl.getInternalFactory(InjectorImpl.java:938)&#13;
	at com.google.inject.internal.FactoryProxy.notify(FactoryProxy.java:48)&#13;
	at com.google.inject.internal.ProcessedBindingData.runCreationListeners(ProcessedBindingData.java:60)&#13;
	at com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:133)&#13;
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:106)&#13;
	at com.google.inject.Guice.createInjector(Guice.java:87)&#13;
	at com.google.inject.Guice.createInjector(Guice.java:69)&#13;
	at com.google.inject.Guice.createInjector(Guice.java:59)&#13;
	at net.thucydides.core.guice.Injectors.getInjector(Injectors.java:27)&#13;
	at net.serenitybdd.junit.runners.SerenityRunner.&lt;init&gt;(SerenityRunner.java:102)&#13;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)&#13;
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#13;
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)&#13;
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder$DefensiveAnnotatedBuilder.buildRunner(DefensiveAllDefaultPossibilitiesBuilder.java:113)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:56)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.vintage.engine.discovery.ClassSelectorResolver.resolveTestClass(ClassSelectorResolver.java:66)&#13;
	at org.junit.vintage.engine.discovery.ClassSelectorResolver.resolve(ClassSelectorResolver.java:47)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.lambda$resolve$2(EngineDiscoveryRequestResolution.java:129)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1602)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:174)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:120)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolveCompletely(EngineDiscoveryRequestResolution.java:87)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.run(EngineDiscoveryRequestResolution.java:80)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolver.resolve(EngineDiscoveryRequestResolver.java:112)&#13;
	at org.junit.vintage.engine.discovery.VintageDiscoverer.discover(VintageDiscoverer.java:42)&#13;
	at org.junit.vintage.engine.VintageTestEngine.discover(VintageTestEngine.java:62)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discoverEngineRoot(DefaultLauncher.java:177)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discoverRoot(DefaultLauncher.java:164)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:120)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.&lt;init&gt;(JUnit5TestReference.java:46)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createUnfilteredTest(JUnit5TestLoader.java:76)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createTest(JUnit5TestLoader.java:66)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.loadTests(JUnit5TestLoader.java:53)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:513)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
Caused by: java.lang.IllegalStateException: Unable to load cache item&#13;
	at com.google.inject.internal.cglib.core.internal.$LoadingCache.createEntry(LoadingCache.java:79)&#13;
	at com.google.inject.internal.cglib.core.internal.$LoadingCache.get(LoadingCache.java:34)&#13;
	at com.google.inject.internal.cglib.core.$AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:116)&#13;
	at com.google.inject.internal.cglib.core.$AbstractClassGenerator.create(AbstractClassGenerator.java:291)&#13;
	at com.google.inject.internal.cglib.reflect.$FastClass$Generator.create(FastClass.java:65)&#13;
	at com.google.inject.internal.BytecodeGen.newFastClassForMember(BytecodeGen.java:258)&#13;
	at com.google.inject.internal.BytecodeGen.newFastClassForMember(BytecodeGen.java:207)&#13;
	at com.google.inject.internal.DefaultConstructionProxyFactory.create(DefaultConstructionProxyFactory.java:49)&#13;
	at com.google.inject.internal.ProxyFactory.create(ProxyFactory.java:156)&#13;
	at com.google.inject.internal.ConstructorInjectorStore.createConstructor(ConstructorInjectorStore.java:92)&#13;
	at com.google.inject.internal.ConstructorInjectorStore.access$000(ConstructorInjectorStore.java:29)&#13;
	at com.google.inject.internal.ConstructorInjectorStore$1.create(ConstructorInjectorStore.java:37)&#13;
	at com.google.inject.internal.ConstructorInjectorStore$1.create(ConstructorInjectorStore.java:33)&#13;
	at com.google.inject.internal.FailableCache$1.load(FailableCache.java:40)&#13;
	at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3529)&#13;
	at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2278)&#13;
	at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2156)&#13;
	at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2046)&#13;
	... 64 more&#13;
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.google.inject.internal.cglib.core.$MethodWrapper&#13;
	at com.google.inject.internal.cglib.core.$DuplicatesPredicate.evaluate(DuplicatesPredicate.java:104)&#13;
	at com.google.inject.internal.cglib.core.$CollectionUtils.filter(CollectionUtils.java:52)&#13;
	at com.google.inject.internal.cglib.reflect.$FastClassEmitter.&lt;init&gt;(FastClassEmitter.java:69)&#13;
	at com.google.inject.internal.cglib.reflect.$FastClass$Generator.generateClass(FastClass.java:77)&#13;
	at com.google.inject.internal.cglib.core.$DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)&#13;
	at com.google.inject.internal.cglib.core.$AbstractClassGenerator.generate(AbstractClassGenerator.java:329)&#13;
	at com.google.inject.internal.cglib.core.$AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:93)&#13;
	at com.google.inject.internal.cglib.core.$AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:91)&#13;
	at com.google.inject.internal.cglib.core.internal.$LoadingCache$2.call(LoadingCache.java:54)&#13;
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)&#13;
	at com.google.inject.internal.cglib.core.internal.$LoadingCache.createEntry(LoadingCache.java:61)&#13;
	... 81 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
